<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 小小的交流博客</title>
    <link>https://xiaofangkang.gitee.io/posts/</link>
    <description>Recent content in Posts on 小小的交流博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 08 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://xiaofangkang.gitee.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JVM 内存溢出</title>
      <link>https://xiaofangkang.gitee.io/2020/jvm-%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xiaofangkang.gitee.io/2020/jvm-%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/</guid>
      <description>使用代码：
 -Xms256m -Xmx1024m -XX:MaxNewSize=256m -XX:PermSize=64M -XX:MaxPermSize=128M </description>
    </item>
    
    <item>
      <title>systemctl使用方法</title>
      <link>https://xiaofangkang.gitee.io/2020/systemctl/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xiaofangkang.gitee.io/2020/systemctl/</guid>
      <description>说明 每一个服务以.service结尾，一般会分为3部分：[Unit]、[Service]和[Install]
vim /usr/lib/systemd/system/xxx.service 
[Unit] # 主要是服务说明 Description=test # 简单描述服务 After=network.target # 描述服务类别，表示本服务需要在network服务启动后在启动 Before=xxx.service # 表示需要在某些服务启动之前启动，After和Before字段只涉及启动顺序，不涉及依赖关系。 [Service] # 核心区域 Type=forking # 表示后台运行模式。 User=user # 设置服务运行的用户 Group=user # 设置服务运行的用户组 KillMode=control-group # 定义systemd如何停止服务 PIDFile=/usr/local/test/test.pid # 存放PID的绝对路径 Restart=no # 定义服务进程退出后，systemd的重启方式，默认是不重启 ExecStart=/usr/local/test/bin/startup.sh # 服务启动命令，命令需要绝对路径 PrivateTmp=true # 表示给服务分配独立的临时空间 [Install] WantedBy=multi-user.target # 多用户 字段说明： Type的类型有：  simple(默认）：# 以ExecStart字段启动的进程为主进程 forking: # ExecStart字段以fork()方式启动，此时父进程将退出，子进程将成为主进程（后台运行）。一般都设置为forking oneshot: # 类似于simple，但只执行一次，systemd会等它执行完，才启动其他服务 dbus： # 类似于simple, 但会等待D-Bus信号后启动 notify: # 类似于simple, 启动结束后会发出通知信号，然后systemd再启动其他服务 idle： # 类似于simple，但是要等到其他任务都执行完，才会启动该服务。  EnvironmentFile: 指定配置文件，和连词号组合使用，可以避免配置文件不存在的异常。</description>
    </item>
    
    <item>
      <title>hugo 使用方法</title>
      <link>https://xiaofangkang.gitee.io/2020/hugo-%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xiaofangkang.gitee.io/2020/hugo-%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4/</guid>
      <description>1. 创建文章 $ hugo new *.md 解释：about.md 自动生成到了 content/about.md
2. 部署服务 $ hugo 解释： 使用 hugo 生成 pages 修改的文件用于显示内容
3.使用皮肤 $ git clone https://hub.fastgit.org/liuzc/leaveit.git
皮肤的使用说明： https://liuzhichao.com/2018/hugo-theme-leaveit/
4. 皮肤使用的一些问题 配置文件中 menu 中的是页面中的标签栏。
[[menu.main]] name = &amp;quot;类型&amp;quot; url = &amp;quot;/categories/&amp;quot; weight = 2 weight 代表标签头的位置 越小越靠前
5. 文章编写时的抬头描述 --- title: &amp;quot;java 远程调试&amp;quot; date: &amp;quot;2020-12-07&amp;quot; tags: [&amp;quot;java&amp;quot;,&amp;quot;调试&amp;quot;] categories: [&amp;quot;java调试&amp;quot;] --- title ：文件头 date: 文件创建时间 tags: 标签 &amp;mdash;&amp;ndash;&amp;gt; 在配置文件中也会使用到 categories: 类型 &amp;mdash;&amp;gt; 在配置文件中也会使用到
 配置文件设置 根目录下的 config.</description>
    </item>
    
    <item>
      <title>java 远程调试</title>
      <link>https://xiaofangkang.gitee.io/2020/java-%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/</link>
      <pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xiaofangkang.gitee.io/2020/java-%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/</guid>
      <description>远程JVM启用调试模式 java-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=2857-jar *.jar 描述  -XDebug 表示虚拟机启用调试功能 -Xrunjdwp 加载JDWP transport 调试程序JVM使用的进程之间通讯方式 dt_socket socket通讯 server=y/n JVM是否需要作为调试服务器执行 address 调试服务器监听的端口号 suspend=y/n 调试客户端建立连接之后启动虚拟机 JVM启动之后用验证监听的端口号是否生效了 netstat -anp | grep 1506  tomcat 远程调试 windows 进入目录下的bin目录，编辑打开 startup.bat 在前面添加：
SET CATALINA_OPTS=-server -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000 linux 在catalina.sh中的首行添加：
CATALINA_OPTS=&amp;quot;-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n&amp;quot;idea 本地调试配置 </description>
    </item>
    
  </channel>
</rss>
